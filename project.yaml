specVersion: 1.0.0
name: avalanche-subql-starter
version: 0.0.1
runner:
  node:
    name: "@subql/node-avalanche"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: >-
  This project can be use as a starting point for developing your new Avalanche
  SubQuery project
repository: "https://github.com/subquery/avalanche-subql-starter"
schema:
  file: ./schema.graphql
network:
  endpoint: "http://avalanche.api.onfinality.io:9650"
  chainId: mainnet
  subnet: C
  dictionary: "https://api.subquery.network/sq/subquery/avalanche-dictionary"
dataSources:
  - kind: avalanche/Runtime
    startBlock: 57360 # Block when the Pangolin contract was created
    options:
      # Must be a key of assets
      abi: erc20
      ## Pangolin token https://snowtrace.io/token/0x60781c2586d68229fde47564546784ab3faca982
      address: "0x60781C2586D68229fde47564546784ab3fACA982"
    assets:
      erc20:
        file: "./node_modules/@pangolindex/exchange-contracts/artifacts/contracts/pangolin-core/interfaces/IPangolinERC20.sol/IPangolinERC20.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleLog
          kind: avalanche/LogHandler
          filter:
            ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
            function: Approve(address spender, uint256 rawAmount)
            address: "0x60781C2586D68229fde47564546784ab3fACA982"
